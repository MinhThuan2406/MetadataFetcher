# MetadataFetcher - Updated Commands (Post-Massive Update)
# ========================================================

# Package Troubleshooting
python -m pip show python-dotenv
python -m pip uninstall python-dotenv
python -m pip install python-dotenv

# ========================================================
# PRIMARY CLI COMMANDS (RECOMMENDED)
# ========================================================

# SIMPLE INTERACTIVE COMMAND (RECOMMENDED)
python cli/main.py fetch
# - Prompts for tool name
# - Shows 5 format options (1-5)
# - Automatically saves to /outputs

# System information
python cli/main.py info

# Fetch metadata for multiple tools (batch processing)
python cli/main.py batch flask numpy pandas
python cli/main.py batch --input-file tools.txt --format txt
python cli/main.py batch redis postgresql mysql --format yaml

# Show available output formats
python cli/main.py formats

# Show system information
python cli/main.py info

# ========================================================
# SIMPLE INTERACTIVE COMMAND FEATURES
# ========================================================
# The 'fetch' command provides:
# - Prompts for tool name
# - Shows 5 format options (1-5)
# - Automatic fetching and crawling
# - Automatic output to /outputs directory
# - All formats supported: json, yaml, txt, docx, pdf
# - Simple step-by-step interaction
# - Perfect for quick metadata retrieval

# ========================================================
# INTERACTIVE MODE FEATURES
# ========================================================
# The interactive mode provides:
# - Menu-driven interface
# - Step-by-step tool selection
# - Format selection with numbered options
# - Category selection with descriptions
# - Input method choice (manual/file)
# - Real-time feedback and progress
# - User-friendly error handling

# ========================================================
# ALTERNATIVE MODULE-BASED COMMANDS
# ========================================================

# Using the metadata module directly
python -c "from metadata import fetch_package_metadata; print(fetch_package_metadata('flask'))"
python -c "from metadata import fetch_comprehensive_tool_metadata; print(fetch_comprehensive_tool_metadata('redis'))"

# ========================================================
# DEMO AND EXAMPLES
# ========================================================

# Run the demo example
python examples/demo.py

# ========================================================
# TESTING COMMANDS
# ========================================================

# Run all tests
python -m pytest tests/

# Run specific test files
python -m pytest tests/test_metadata_fetcher.py
python -m pytest tests/test_pypi_fetcher.py
python -m pytest tests/test_github_fetcher.py

# Run tests with verbose output
python -m pytest tests/ -v

# ========================================================
# SCRIPT-BASED COMMANDS (LEGACY - MAY NOT WORK)
# ========================================================

# Note: These scripts may be broken after the massive update
# Use the CLI commands above instead

# Export scripts (may need updates)
python scripts/export.py
python scripts/export_all.py
python scripts/json2txt.py

# Batch processing script (deprecated)
python scripts/batch.py

# ========================================================
# OUTPUT FORMATS SUPPORTED
# ========================================================
# - json: JSON format (default)
# - yaml: YAML format
# - txt: Plain text format (human-readable)
# - docx: Microsoft Word document
# - pdf: PDF document

# ========================================================
# OUTPUT DIRECTORY STRUCTURE
# ========================================================
# outputs/
# ├── json/
# ├── yaml/
# ├── txt/
# ├── docx/
# └── pdf/

# ========================================================
# TOOL CATEGORIES SUPPORTED
# ========================================================
# - ai_ml: AI and Machine Learning tools
# - database: Database systems
# - web_framework: Web frameworks
# - data_science: Data science tools
# - dev_tools: Development tools
# - creative_media: Creative and media tools
# - system_tools: System administration tools
# - other: Other tools

# ========================================================
# EXAMPLES WITH REAL TOOLS
# ========================================================

# AI/ML Tools
python cli/main.py fetch tensorflow --format json
python cli/main.py fetch pytorch --format yaml
python cli/main.py fetch scikit-learn --format txt

# Database Tools
python cli/main.py fetch postgresql --category database
python cli/main.py fetch redis --category database
python cli/main.py fetch mysql --category database

# Web Frameworks
python cli/main.py fetch flask --category web_framework
python cli/main.py fetch django --category web_framework
python cli/main.py fetch fastapi --format txt

# Data Science Tools
python cli/main.py fetch pandas --category data_science
python cli/main.py fetch numpy --category data_science
python cli/main.py fetch matplotlib --format txt

# Batch Processing Examples
python cli/main.py batch tensorflow pytorch scikit-learn --format json
python cli/main.py batch postgresql redis mysql --format yaml
python cli/main.py batch flask django fastapi --format txt